Light exercise for the Hybrid root object.

Imports.

        >>> import os
        >>> import shutil
        >>> import sys
        >>> sys.path.append('../src')
        >>> from pv.ext.Hybrid import Hybrid
        >>> from pv.core import PSys, Log

Init prevayler with an empty data directory.

        >>> datadir = './tmp'
        >>> if os.path.exists(datadir):
        ...     shutil.rmtree(datadir)
        >>> os.mkdir(datadir)
        >>> psys = PSys(Log(datadir), lambda : Hybrid())

The environment in which doctests run isn't a module, and pickle
requires that the class definition be a top level object in a module.
So, define our test transaction class in a file.

        >>> fn  = 'test_module.py'
        >>> if os.path.exists(fn + 'c'):
        ...     os.remove(fn + 'c')
        >>> fp = open('test_module.py', 'w')
        >>> fp.write('class T:\n')
        >>> fp.write('    def __init__(self, sql):\n')
        >>> fp.write('        self.sql = sql\n')
        >>> fp.write('    def __call__(self, root):\n')
        >>> fp.write('        c = root.dbconn\n')
        >>> fp.write('        c.execute(self.sql)\n')
        >>> fp.write('        n = root.get("n", 0)\n')
        >>> fp.write('        root["n"] = n + 1\n')
        >>> fp.close()
        >>> import test_module

Log a few transactions.

        >>> psys.exe(test_module.T("create table test (name)"))
        >>> psys.exe(test_module.T("insert into test values ('abc')"))

Make a snapshot.

        >>> psys.makeSnapshot()

Reload prevayler.

        >>> psys.load(Log(datadir), lambda : Hybrid())

Check state.

	>>> psys.root["n"]
	2
	>>> psys.root.dbconn.execute("select * from test").fetchall()
	[(u'abc',)]

